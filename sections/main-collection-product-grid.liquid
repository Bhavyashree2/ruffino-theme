{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

<link rel="preload" href="{{ 'component-rte.css' | asset_url }}" as="style" onload="this.onload=null;this.rel='stylesheet'">

{%- if section.settings.enable_quick_add -%}
  <link rel="stylesheet" href="{{ 'quick-add.css' | asset_url }}" media="print" onload="this.media='all'">
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}
<noscript>{{ 'component-rte.css' | asset_url | stylesheet_tag }}</noscript>

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<style>

  @media (min-width: 768px) {
    
    .half-hide:before {
        content: '';
        width: 100%;
        height: 100%;
        background: linear-gradient(0deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0.3) 50%, rgba(161,156,160,0) 100%);
        display: block;
        position: absolute;
    }
}

.half-hide.loop-10:before {
    content: '';
    width: 100%;
    height: 100%;
    background: linear-gradient(0deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0.3) 50%, rgba(161,156,160,0) 100%);
    display: block;
    position: absolute;
}

.full-hide {
    height: 1px;
    opacity: 0;
}

#ProductGridContainer.search-active .full-hide {
  opacity: 1;
  height: auto;
}

#ProductGridContainer.search-active  .featured-product-img,
#ProductGridContainer.search-active  .border-line {
  display: none;
}


@media (min-width: 768px) {    
  #ProductGridContainer.search-active  .half-hide:before,
  #ProductGridContainer.search-active  .border-line {  
      display: none; 
  } 
}

</style>

<div class="section-{{ section.id }}-padding">
  {% comment %} Sort is the first tabbable element when filter type is vertical {% endcomment %}
  {%- if section.settings.enable_sorting and section.settings.filter_type == 'vertical' -%}
    <facet-filters-form class="facets facets-vertical-sort page-width small-hide no-js-hidden !tw-my-[30px]">
      <form class="facets-vertical-form" id="FacetSortForm">
        <div class="facet-filters sorting caption">
          <div class="facet-filters__field">
            {% comment %} <h2 class="facet-filters__label caption-large text-body">
              <label for="SortBy">{{ 'products.facets.sort_by_label' | t }}</label>
            </h2> {% endcomment %}
            <div class="select tw-border-2 tw-border-solid tw-p-2.5">
              {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
              <select name="sort_by" class="facet-filters__sort select__select caption-large !tw-text-[18px] !tw-leading-[27px] !tw-tracking-normal" id="SortBy" aria-describedby="a11y-refresh-page-message">
                {%- for option in collection.sort_options -%}
                  <option value="{{ option.value | escape }}"{% if option.value == sort_by %} selected="selected"{% endif %}>{{ option.name | escape }}</option>
                {%- endfor -%}
              </select>
              {% render 'icon-caret' %}
            </div>
          </div>
          <noscript>
            <button type="submit" class="facets__button-no-js button button--secondary">{{ 'products.facets.sort_button' | t }}</button>
          </noscript>
        </div>

        <div class="product-count-vertical light" role="status">
          <div class="loading-overlay__spinner">
            <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
              <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
            </svg>
          </div>
        </div>  
      </form>
    </facet-filters-form>
  {%- endif -%}



  <div class="{% if section.settings.filter_type == 'vertical' %} facets-vertical page-width !tw-p-0 !tw-w-11/12{% endif %}">
    {{ 'component-facets.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
    {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
      <aside aria-labelledby="verticalTitle" class="tw-absolute tw-flex tw-justify-center tw-bg-eerieblack tw-h-[600px] tw-w-[44px] max767:tw-h-[44px] max767:tw-w-full" {% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}" id="main-collection-filters" data-id="{{ section.id }}">
        {% render 'facets', results: collection, enable_filtering: section.settings.enable_filtering, enable_sorting: section.settings.enable_sorting, filter_type: section.settings.filter_type, : filter_button: section.settings.filter-btn %}
      </aside>
    {%- endif -%}

    <div class="product-grid tw-flex tw-flex-wrap tw-justify-start tw-w-full tw-max-w-[1440px] tw-mx-auto tw-my-[100px] mobile:tw-my-[60px] max1440:tw-px-10" id="ProductGridContainer"> 
    
    {%- liquid
      assign sort_by = results.sort_by | default: results.default_sort_by
      assign total_active_values = 0
      if results.url
        assign results_url = results.url
      else
        assign terms = results.terms | escape
        assign results_url = '?q=' | append: terms | append: '&options%5Bprefix%5D=last&sort_by=' | append: sort_by
      endif
    -%}
  
    {%- if section.settings.filter_type == 'drawer' -%}
      <facet-filters-form class="facets facets-pill">
        <form id="FacetFiltersPillsForm" class="facets__form max1440:">
          <div class="active-facets active-facets-desktop">
            {%- for filter in collection.filters -%}
              {%- for value in filter.active_values -%}
                <facet-remove>
                  <a href="{{ value.url_to_remove }}" class="active-facets__button active-facets__button--light">
                    <span class="active-facets__button-inner tw-font-neutraface-display-bold !tw-text-black !tw-text-sm tw-uppercase">
                      {{ filter.label }}: {{ value.label | escape }}
                      {% render 'icon-close-small' %}
                      <span class="visually-hidden">{{ 'products.facets.clear_filter' | t }}</span>
                    </span>
                  </a>
                </facet-remove>
              {%- endfor -%}          
            {%- endfor -%}
            <facet-remove class="active-facets__button-wrapper">
              <a href="{{ results_url }}" class="active-facets__button-remove tw-font-neutraface-display-bold !tw-text-black !tw-text-sm tw-uppercase">
                <span>{{ 'products.facets.clear_all' | t }}</span>
              </a>
            </facet-remove>
          </div>
        </form>
      </facet-filters-form>
    {%- endif -%}
      {%- paginate collection.products by 1000 -%}
        {%- if collection.products.size == 0 -%}
          <div class="collection collection--empty page-width" id="product-grid" data-id="{{ section.id }}">
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t }}<br>
                {{ 'sections.collection_template.use_fewer_filters_html' | t: link: collection.url, class: "underlined-link link" }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div class="collection tw-w-full">
            <div class="loading-overlay gradient"></div>
    
            <div id="product-grid" data-id="{{ section.id }}" class="
              product-grid tw-flex tw-flex-wrap tw-justify-start tw-w-full tw-max-w-[1440px] tw-mx-auto mobile:tw-px-6 mobile:tw-my-0 max1440:tw-px-10">
              {% assign borderCount = 0 %}
              {% assign paginateCounter = 0 %}
              {%- for product in collection.products -%}

                  {% assign paginateCounter = paginateCounter | plus: 1 %}

                  {% if paginateCounter > 6 and paginateCounter < 9 %}
                    {% assign hideStatus = "half-hide" %}
                  {% elsif paginateCounter > 9 %}
                      {% assign hideStatus = "full-hide" %}
                  {% endif %}

                  {% if product.handle == section.settings.featured_product %}     
                  
                    {% assign paginateCounter = paginateCounter | plus: 2 %}
                    
                    <div class="js-show-on-scroll-for-border tw-block tw-relative tw-basis-2/3 tw-bg-cover tw-bg-center mobile:tw-basis-full mobile:tw-border-b mobile:tw-border-black mobile:!tw-hidden featured-product-img loop-{{ forloop.index}} {{ hideStatus }}" style="background-image:url({{ section.settings.featured_img | img_url: 'x590' }})"> </div>

                    <img src="{{ section.settings.featured_img | img_url: '767x' }}" class="js-show-on-scroll-for-border tw-block tw-relative min768:tw-hidden mobile:tw-py-3 content-{{ paginateCounter }} featured-product-img loop-{{ forloop.index}} {{ hideStatus }}" loading="lazy">
        
                    <div class="tw-block tw-w-full tw-basis-full min768:tw-hidden featured-product-img">
                        <div data-animate-type="tw-animate-line_animation" class="js-show-on-scroll tw-block tw-border-b tw-border-black tw-m-auto"> </div>
                    </div>

                    {% assign borderCount = borderCount | plus: 2 %}

                  {% endif %}

                  {% render 'card-product',
                    card_product: product,
                    forloop: forloop.index,
                    borderCount: borderCount,
                    hideStatus: hideStatus,
                    paginateCounter: paginateCounter 
                  %}      
                  
                  {% assign borderCount = borderCount | plus: 1 %}
                  {% assign borderCountDivided = borderCount | divided_by: 3.00 | remove: ".0" %}

                  {% comment %}
                  {{ borderCount }}
                  {{ borderCountDivided }}
                  {% endcomment %}

                  {% if borderCountDivided contains "." %}                      
                  {% else %}
                  
                    <div class="tw-block tw-w-full tw-my-3.5 tw-basis-full mobile:!tw-hidden border-line loop-{{ forloop.index}} {% if paginateCounter >= 9 %} full-hide {% endif %}">
                      <div data-animate-type="tw-animate-line_animation" class="js-show-on-scroll !tw-block tw-border-b tw-border-black tw-m-auto"></div>
                    </div>
                  {% endif %}

              {%- endfor -%}
            </div>
    
            {%- if paginate.pages > 1 -%}
              {% render 'pagination', paginate: paginate, anchor: '' %}
            {%- endif -%}
          </div>
        {%- endif -%}
      {%- endpaginate -%}
    </div>
  </div>
</div>
<div id="overflow-watcher"> </div>

{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },  
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [      
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "drawer",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "text",
      "id": "filter-btn",
      "label": "Filter button text",
      "default": "Filter by"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
    {
      "type": "header",
      "content": "Featured product",
      "info": "Will only show when no filters are enabled"
    },
    {
      "type": "product",
      "id": "featured_product",
      "label": "Product"
    },
    {
      "type": "image_picker",
      "id": "featured_img",
      "label": "Featured product companion image"
    }
  ]
}
{% endschema %}

<script>

  $(document).ready(function() {     
        
    /* ====================================================
    * jQuery is in viewport.
    *
    * https://github.com/frontid/jQueryIsInViewport
    * Marcelo Iván Tosco (capynet)
    * Inspired on https://stackoverflow.com/a/40658647/1413049
    * ==================================================== */
    !function ($) {
        'use strict';
    
        const IsInViewport = function (el, cb, offset) {
        this.$el = $(el);
        this.cb = cb;
        this.offset = offset;
        this.previousIsInState = false;
    
        // Make the first check
        this.check();
    
        // Start watching.
        this.watch();
    
        return this;
        };
    
        IsInViewport.prototype = {
    
        /**
        * Checks if the element is in.
        *
        * @returns {boolean}
        */
        isIn: function () {
            const _self = this;
            const $win = $(window);
            const elementTop = _self.$el.offset().top - _self.offset;
            const elementBottom = elementTop + _self.$el.outerHeight();
            const viewportTop = $win.scrollTop();
            const viewportBottom = viewportTop + $win.height();
            return elementBottom > viewportTop && elementTop < viewportBottom;
        },
    
        /**
        * Launch a callback indicating when the element is in and when is out.
        */
        watch: function () {
            const self = this;
            $(window).on('resize scroll', self.check.bind(self));
        },
    
        /**
        * Checks if the element is on in the viewport.
        */
        check: function () {
            const self = this;
    
            if (self.isIn() && self.previousIsInState === false) {
            self.cb.call(self.$el, 'entered');
            self.previousIsInState = true;
            }
    
            if (self.previousIsInState === true && !self.isIn()) {
            self.cb.call(self.$el, 'leaved');
            self.previousIsInState = false;
            }
        }
        };
    
        // jQuery plugin.
        //-----------------------------------------------------------
        $.fn.isInViewport = function (cb, offset) {
        offset || (offset = 0);
        return this.each(function () {
            const $element = $(this);
            const data = $element.data('isInViewport');
    
            if (!data) {
            $element.data('isInViewport', (new IsInViewport(this, cb, offset)));
            }
        })
        }
    
    }(window.jQuery);

    const offset = 0;
   
    $('#overflow-watcher').isInViewport(function (status) {
        if (status === 'entered') {
            console.log('is in view');
            setTimeout(function() {
                $('.half-hide').removeClass('half-hide');
                $('.full-hide').removeClass('full-hide');
            }, 1000);     
      }
    }, offset)
   
      
  });

</script>